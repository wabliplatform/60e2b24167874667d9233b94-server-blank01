openapi: 3.0.1
info:
  contact:
    email: lampralexandros@gmail.com
  description: This is a sample openApi document
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://wabli.netlify.app/
  title: TempApi
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- description: solid-spoon
  url: http://83.212.100.226:3001/v1
security:
- {}
tags:
- description: not yet ready
  name: myprojects
- description: not yet ready
  name: project
paths:
  /myprojects:
    post:
      operationId: createmyprojects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myprojects'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Creates the data
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
  /myprojects/{myprojectsId}:
    delete:
      operationId: deletemyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
    get:
      operationId: getmyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Get the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
    put:
      operationId: updatemyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myprojects'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Updates the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
  /myprojects/getAll:
    get:
      operationId: getAllmyprojects
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/myprojects'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - myprojects
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/MyprojectsController
  /project:
    post:
      operationId: createproject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
      summary: Creates the data
      tags:
      - project
      x-eov-operation-handler: controllers/ProjectController
  /project/{projectId}:
    delete:
      operationId: deleteproject
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - project
      x-eov-operation-handler: controllers/ProjectController
    get:
      operationId: getproject
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
      summary: Get the element
      tags:
      - project
      x-eov-operation-handler: controllers/ProjectController
    put:
      operationId: updateproject
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
      summary: Updates the element
      tags:
      - project
      x-eov-operation-handler: controllers/ProjectController
  /project/getAll:
    get:
      operationId: getAllproject
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - project
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/ProjectController
components:
  schemas:
    myprojects:
      example:
        ptitle: ptitle
        _id: _id
      properties:
        _id:
          type: string
        ptitle:
          type: string
      required:
      - ptitle
      type: object
    project:
      example:
        pptitle: pptitle
        _id: _id
      properties:
        _id:
          type: string
        pptitle:
          type: string
      required:
      - pptitle
      type: object
